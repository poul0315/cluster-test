name: CICD to cluster

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: my-app
      TAG: ${{ github.sha }}
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:$TAG .

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image to DockerHub
        run: |
          docker tag $IMAGE_NAME:$TAG ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$TAG

      - name: Deploy to Kubernetes
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MASTER_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            sudo kubectl apply -f k8s/deployment.yaml
            sudo kubectl apply -f k8s/service.yaml
            sudo kubectl set image deployment/my-app-deployment my-app-container=${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$TAG

  distribute-images:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: [ "${{ secrets.WORKER2_HOST }}", "${{ secrets.WORKER3_HOST }}", "${{ secrets.WORKER4_HOST }}" ]
    steps:
      - name: SSH and Pull Docker Image on Worker Node
        uses: appleboy/ssh-action@master
        with:
          host: ${{ matrix.host }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$TAG
            docker tag ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$TAG $IMAGE_NAME:$TAG

      - name: Cleanup Old Docker Images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ matrix.host }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker images -a | grep "${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME" | grep -v $TAG | awk '{print $3}' | xargs docker rmi -f
