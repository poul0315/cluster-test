name: CICD to cluster

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    env:
      IMAGE_NAME: my-app
      TAG: ${{ github.sha }}
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Debug Image Name and Tag Before Build
        run: |
          echo "Docker Username: ${{ secrets.DOCKER_USERNAME }}"
          echo "Image Name: $IMAGE_NAME"
          echo "Tag: $TAG"

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:$TAG .

      - name: Login to DockerHub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image to DockerHub
        run: |
          docker tag $IMAGE_NAME:$TAG ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$TAG
          docker push ${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$TAG

      - name: Deploy to Kubernetes
        run : |
          sudo kubectl apply -f k8s/deployment.yaml
          sudo kubectl apply -f k8s/service.yaml
          sudo kubectl set image deployment/my-app-deployment my-app-container=${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$TAG

  distribute-images:
    needs: build-and-deploy
    runs-on: self-hosted
    strategy:
      matrix:
        host: [ "WORKER2_HOST", "WORKER3_HOST", "WORKER4_HOST" ]
    env:
      IMAGE_NAME: my-app
      TAG: ${{ github.sha }}
    steps:
      - name: Debug Image Name and Tag
        run: |
          echo "Docker Username: ${{ secrets.DOCKER_USERNAME }}"
          echo "Image Name: $IMAGE_NAME"
          echo "Tag: $TAG"

      - name: SSH and Pull Docker Image on Worker Node
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets[matrix.host] }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          envs: 
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
            IMAGE_NAME: ${{ env.IMAGE_NAME }}
            TAG: ${{ env.TAG }}
          script: |
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            FULL_IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$TAG"
            echo "Pulling image $FULL_IMAGE_NAME"
            docker pull $FULL_IMAGE_NAME

      - name: Cleanup Old Docker Images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets[matrix.host] }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker images -a | grep "${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME" | grep -v $TAG | awk '{print $3}' | xargs docker rmi -f
